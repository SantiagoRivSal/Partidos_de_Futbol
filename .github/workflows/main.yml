name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  Constructor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Build images
        run: |
          docker-compose build
  
      - name: start containers
        run: |
          docker-compose up -d

  Test:
    needs: Constructor
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Backend Docker Image for Testing
        run: |
          docker build -t backend-test ./backend

      - name: Run Unit Tests in Docker
        run: |
          docker run --rm backend-test go test ./...

  Publicacion_Docker:
    needs: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Tag and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-database:latest ./db
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-frontend:latest ./frontend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-backend:latest ./backend

          docker push ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-database:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-backend:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  Publicacion_Google_Cloud:
    needs: Publicacion_Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to GCR
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/keyfile.json
          gcloud auth activate-service-account --key-file=/tmp/keyfile.json
          gcloud auth configure-docker gcr.io

      - name: Tag and push Docker images to GCR
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-database:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-frontend:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-backend:latest

          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-database:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/google_database
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-frontend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/google_frontend
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/partidos_de_futbol-backend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/google_backend

          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/google_database:latest
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/google_frontend:latest
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/google_backend:latest

  Implementacion_Nube:
    needs: Publicacion_Google_Cloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for Container Registry
        run: |
            gcloud auth configure-docker
    
      - name: Login to DockerHub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
    
      - name: Download Docker images
        run: |
           docker pull sanrivsal/backend:latest
           docker pull sanrivsal/frontend:latest
           docker pull sanrivsal/fifa_db:latest
        
      - name: Run Docker db container to extract SQL file
        run: |
            docker create --name temp-container sanrivsal/fifa_db:latest
            docker cp temp-container:/docker-entrypoint-initdb.d/fifa.sql ./fifa.sql
            docker rm temp-container
    
      - name: Upload SQL file to Cloud Storage
        run: gsutil cp ./fifa.sql gs://bd_temp
    
      - name: Tag backend and frontend Docker images
        run: |
            docker tag sanrivsal/backend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
            docker tag sanrivsal/frontend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest
    
      - name: Push backend and frontend Docker images to Google Container Registry
        run: |
            docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
            docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

      - name: Configure Docker for Container Registry
        run: |
            gcloud auth configure-docker

      - name: Import SQL file to Cloud SQL
        run: |
            gcloud --quiet sql import sql fifa gs://bd_temp/fifa.sql
          
      - name: Deploy frontend to Google Cloud Run
        run: |
            gcloud run deploy frontend
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest 
            --port=3000 
            --platform managed 
            --region=us-central1 
            --allow-unauthenticated 
            --max-instances=15
    
      - name: Deploy backend to Google Cloud Run
        run: |
            gcloud run deploy backend \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest \
            --port=8080 \
            --platform managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --max-instances=15 \
            --add-cloudsql-instances=fifa \
            --set-env-vars=DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            
  integration-test:
    needs: Implementacion_Nube
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
  
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
  
      - name: Install Dependencies and CodeceptJS
        working-directory: frontend
        run: |
          npm install
          npx playwright install
          sudo apt-get install -y xvfb
  
      - name: Run Integration Tests with xvfb-run
        working-directory: frontend
        run: xvfb-run -a npx codeceptjs run --steps