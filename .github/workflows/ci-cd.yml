name: CI/CD worflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build images
      run: |
        docker-compose build

    - name: start containers
      run: |
        docker-compose up -d
        
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
        
    - name: Execute unit tests
      run: |
        docker exec backend go test -v  ./...

    - name: Stop containers
      run: |
        docker-compose down

    - name: Login to DockerHub
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Tag images
      run: |
        docker tag backend:latest ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
        docker tag frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
        docker tag fifa_db:latest ${{ secrets.DOCKERHUB_USERNAME }}/fifa_db:latest
      
    - name: Push images
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/fifa_db:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Configure gcloud CLI
      uses: google-github-actions/setup-gcloud@v0.5.0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

        
    - name: Configure Docker for Container Registry
      run: |
        gcloud auth configure-docker

    - name: Login to DockerHub
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Download Docker images
      run: |
        docker pull sanrivsal/backend:latest
        docker pull sanrivsal/frontend:latest
        docker pull sanrivsal/fifa_db:latest
    
    - name: Run Docker db container to extract SQL file
      run: |
        docker create --name temp-container sanrivsal/fifa_db:latest
        docker cp temp-container:/docker-entrypoint-initdb.d/fifa.sql ./fifa.sql
        docker rm temp-container

    - name: Upload SQL file to Cloud Storage
      run: gsutil cp ./fifa.sql gs://bd_temp

    - name: Tag backend and frontend Docker images
      run: |
        docker tag sanrivsal/backend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
        docker tag sanrivsal/frontend:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

    - name: Push backend and frontend Docker images to Google Container Registry
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest
        
    - name: Import SQL file to Cloud SQL
      run: |
        gcloud --quiet sql import sql fifa gs://bd_temp/fifa.sql

    - name: Deploy backend to Google Cloud Run
      run: |
        gcloud run deploy backend \
        --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest \
        --port=8080 \
        --platform managed \
        --region=us-central1 \
        --allow-unauthenticated \
        --max-instances=15 \
        --add-cloudsql-instances=fifa \
        --set-env-vars=DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        - name: Deploy backend and frontend to Google Cloud Run
    - name: Deploy frontend to Google Cloud Run
      run: |
        gcloud run deploy frontend
        --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest 
        --port=3000 
        --platform managed 
        --region=us-central1 
        --allow-unauthenticated 
        --max-instances=15

  integration-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install CodeceptJS
      run: npm install codeceptjs@3.5.13-beta.3
  
    - name: Update Dependencies
      run: npm update
  
    - name: Install playwright
      working-directory: ./frontend
      run: |
        npm install
        npm install playwright@^1.18
        npx playwright install

    - name: Execute integration tests
      working-directory: ./frontend
      run: |
        npx codeceptjs run --steps